using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace AlchemistCodeCode
{
    public class SaveFile
    {
        static byte[] xorArray = new byte[128]
        {
            0x08, 0x38, 0x55, 0x64, 0x17, 0xa0, 0x78, 0x4c, 0xf5, 0x97, 0x86, 0x4b, 0x16, 0xac, 0x9d, 0xd9,
            0xaa, 0x1c, 0x81, 0x7a, 0x27, 0xae, 0x3f, 0x2c, 0xa1, 0x95, 0x80, 0xf4, 0xc8, 0x97, 0xd8, 0x6d,
            0x98, 0x2c, 0x12, 0x5b, 0x88, 0x74, 0x13, 0xbe, 0xe6, 0x84, 0xda, 0xac, 0x14, 0x19, 0xf3, 0x38,
            0x8a, 0xe2, 0x9d, 0x5d, 0xa0, 0x5c, 0x03, 0x71, 0xf6, 0x5b, 0x56, 0xb6, 0x48, 0x14, 0xe7, 0x16,
            0xea, 0x44, 0x3b, 0xd0, 0xd8, 0x20, 0xd5, 0x65, 0xe9, 0xbe, 0xf9, 0xb2, 0xa8, 0x49, 0x1e, 0x80,
            0x1e, 0xd8, 0x80, 0xf1, 0x3f, 0x71, 0x5f, 0x79, 0x92, 0xe3, 0xef, 0xb8, 0xbe, 0xe9, 0x63, 0x5a,
            0x1e, 0xcf, 0x24, 0x5b, 0x87, 0x6b, 0xa2, 0xdc, 0x13, 0x3d, 0x7b, 0xfe, 0x19, 0x60, 0x53, 0xcf,
            0x13, 0x03, 0x45, 0x4f, 0x0f, 0x84, 0xc8, 0x87, 0xac, 0x2a, 0xd5, 0xbc, 0x70, 0xbd, 0xfd, 0x66
        };
        static List<Byte> Decrypt(List<Byte> result)
        {
            int v2 = 153;
            for (int i = 0; i < result.Count; ++i)
            {
                v2 ^= result[i] ^ xorArray[i & 0x7F];
                result[i] = (byte)v2;
            }
            return result;
        }
        static List<Byte> Encrypt(List<Byte> result)
        {
            byte v2 = 0x99;
            byte v4;
            for (int i = 0; i < result.Count; ++i)
            {
                v4 = result[i];
                result[i] = (byte)(v2 ^ xorArray[i & 0x7F] ^ v4);
                v2 = v4;
            }
            return result;
        }
        public static void Save(String deviceId, String secret, String saveFileLoc)
        {
            var fileContent = deviceId + " " + secret;
            var fileBytes = Encoding.UTF8.GetBytes(fileContent);
            var saveFileBytes = Encrypt(fileBytes.ToList());
            File.WriteAllBytes(saveFileLoc, saveFileBytes.ToArray());
        }
    }
}
